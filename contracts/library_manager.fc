int bounced?() asm "INMSG_BOUNCED";
slice msg_src() asm "INMSG_SRC";
cell get_data() asm "c4 PUSH";
(slice, cell) load_ref(slice s) asm( -> 1 0) "LDREF";
slice begin_parse(cell c) asm "CTOS";
int equal_slices(slice a, slice b) asm "SDEQ";
int slice_empty?(slice s) asm "SEMPTY";
() set_lib_code(cell code, int mode) impure asm "SETLIBCODE";

() recv_internal(slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }

    if (bounced?()) {
        return ();
    }

    throw_unless(100, equal_slices(msg_src(), get_data().begin_parse()));
    int op = in_msg_body~load_uint(32);

    if (op == "op::add_lib"c) {
        set_lib_code(in_msg_body~load_ref(), 2);
    }

    if (op == "op::delete_lib"c) {
        set_lib_code(in_msg_body~load_ref(), 0);
    }

    return ();
}
